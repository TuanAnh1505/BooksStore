@using BookStore.Models;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<Product>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h1>Product List</h1>

<p class="text-end">
    <a asp-action="Create" class="btn btn-success">Create New</a>
</p>

<table class="table table-success">
    <thead>
        <tr>
            <th>Name</th>
            <th class="text-center" style="max-width: 50px;">Image</th>
            <th>Describe</th>
            <th>Description</th>
            <th>Price</th>
            <th class="text-center">ComputedStockQuantity</th>
            <th>Category</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @{
            var rowIndex = 0; // Track row index
        }
        @foreach (var item in Model)
        {
            // Toggle between light primary and success colors
            var rowClass = rowIndex % 2 == 0 ? "table-primary" : "table-success";
            rowIndex++;

            <tr class="@rowClass">
                <td class="description-cell" style="max-width: 150px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>

                <td class="text-center" style="max-width: 50px;">
                    <img src="~/images/@item.Image" class="img-fluid" alt="@item.Name" style="max-height: 60px; object-fit: contain;" />
                </td>

                <td class="description-cell" style="max-width: 250px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                    @Html.DisplayFor(modelItem => item.Describe)
                </td>

                <td class="description-cell" style="max-width: 250px; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td class="text-center">
                    @Html.DisplayFor(modelItem => item.ComputedStockQuantity) <!-- Hiển thị StockQuantity từ Inventory -->
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary btn-sm">
                        <i class="fas fa-edit"></i>
                    </a> |
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">
                        <i class="fas fa-info-circle"></i>
                    </a> |
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">
                        <i class="fas fa-trash-alt"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div style="margin-top: 5vh;">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }), new PagedListRenderOptions
{
    LiElementClasses = new List<string> { "page-item" },
    PageClasses = new List<string> { "page-link" }
})
</div>

@section Scripts {
    <script>
        console.log('Child view scripts loaded.');
    </script>
}
